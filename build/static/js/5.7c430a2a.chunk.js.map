{"version":3,"sources":["pages/Home/selectors.js","components/ToolBarIcon/ToolBarIcon.js","components/ToolBarIcon/index.js","components/ToolBar/ToolBar.js","components/PrincipalContent/PrincipalContent.js","components/ChatCard/ChatCard.js","components/ChatCard/index.js","components/ChatView/ChatView.js","pages/Home/Home.jsx","pages/Home/index.js"],"names":["getHome","createSelector","data","dataState","pages","home","getBackgroundImage","createGetSelector","getChatViewStatus","ToolBarIcon","toolData","useState","icon","setIcon","toggleIcon","event","iconTag","$","target","find","addBack","innerHTML","iconHovered","id","className","onClick","clickHandler","to","onMouseEnter","onMouseLeave","propTypes","PropTypes","object","ToolBar","props","tools","toolItems","map","index","key","defaultProps","PrincipalContent","ChatCard","chat","classes","isUser","join","text","ChatView","classes1","chatView","classes2","chats","chatCards","bool","mapStateToProps","createPropsSelector","connect","Home","pageType","initializeHome","this","React","Component","backgroundImage","string","func","mapDispatchToProps","actions"],"mappings":"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","file":"static/js/5.7c430a2a.chunk.js","sourcesContent":["import {createSelector} from 'reselect'\nimport {createGetSelector} from 'reselect-immutable-helpers'\n\nconst getData = ({data}) => data\n\nexport const getHome = createSelector(\n    getData,\n    (dataState) => {\n        return dataState.pages.home\n    }\n)\n\nexport const getBackgroundImage = createGetSelector(getHome, 'backgroundImage')\nexport const getModalState = createGetSelector(getHome, 'modalOpened')\nexport const getUploadModalState = createGetSelector(getHome, 'uploadModalOpened')\nexport const getFormValues = createGetSelector(getHome, 'formValues')\nexport const getFormErrors = createGetSelector(getHome, 'formErrors')\nexport const getImages = createGetSelector(getHome, 'images')\nexport const getChatViewStatus = createGetSelector(getHome, 'chatView')\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport $ from 'jquery'\nimport {Link} from 'react-router-dom';\n\nconst ToolBarIcon = ({toolData}) => {\n\n  const [icon, setIcon] = useState(toolData.icon)\n\n  const toggleIcon = (event, toolData) => {\n    const iconTag = $(event.target).find('i').addBack('i')\n    const currentIcon = iconTag && iconTag[0] && iconTag[0].innerHTML\n    if (currentIcon === toolData.icon) {\n      setIcon(toolData.iconHovered)\n    } else {\n      setIcon(toolData.icon)\n    }\n  }\n\n  return (\n    <li id={toolData.id} className=\"c-ToolBarIcon nav-item\" onClick={toolData.clickHandler}>\n      <Link to=\"#\" className=\"nav-link\">\n        <i \n          className=\"material-icons orange600 md-36\" \n          onMouseEnter={(event) => toggleIcon(event, toolData)}\n          onMouseLeave={(event) => toggleIcon(event, toolData)}>\n          {icon}\n        </i>\n      </Link>\n    </li>\n  );\n};\n\nToolBarIcon.propTypes = {\n  toolData: PropTypes.object\n};\n\nexport default ToolBarIcon;","import ToolBarIcon from './ToolBarIcon';\n\nexport default ToolBarIcon;","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport ToolBarIcon from './../ToolBarIcon'\n\nconst ToolBar = props => {\n\n  const [tools, setTools] = useState([\n    {\n      id: 'btnFavorites',\n      icon: 'info_outlined',\n      iconHovered: 'info'\n    },\n    {\n      id: 'btnClearCommand',\n      icon: 'delete_outline',\n      iconHovered: 'delete'\n    },\n    {\n      id: 'btnFireCommand',\n      icon: 'send',\n      iconHovered: 'send'\n    },\n    {\n      id: 'btnSTTCommand',\n      icon: 'chat_bubble_outline',\n      iconHovered: 'chat_bubble'\n    }\n  ])\n\n  const toolItems = tools && tools.map((toolData, index) => {\n    return <ToolBarIcon toolData={toolData} key={index} />\n  })\n\n  return (\n    <ul className='c-ToolBar'>\n      {toolItems}\n    </ul>\n  );\n};\n\nToolBar.defaultProps = {\n\n};\n\nToolBar.propTypes = {\n\n};\n\nexport default ToolBar;","import React from 'react';\nimport ToolBar from '../ToolBar/ToolBar';\n\nconst PrincipalContent = props => {\n  return (\n    <div className='c-PrincipalContent'>\n      <ToolBar />\n    </div>\n  );\n};\n\nexport default PrincipalContent;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ChatCard = ({chat}) => {\n\n  const classes = ['c-ChatCard', chat.isUser ? 'rightFloater' : ''].join(' ')\n  return (\n    <div className={classes}>\n      <p>{chat.text}</p>\n    </div>\n  );\n};\n\nChatCard.propTypes = {\n\n};\n\nexport default ChatCard;","import ChatCard from './ChatCard';\n\nexport default ChatCard;","import React from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {createPropsSelector} from 'reselect-immutable-helpers';\nimport {getChatViewStatus} from './../../pages/Home/selectors'\nimport ChatCard from './../ChatCard'\n\nconst ChatView = props => {\n\n  const classes1 = ['c-ChatView', props.chatView ? 'pad' : ''].join(' ')\n  const classes2 = ['c-display flex', props.chatView ? 'show' : ''].join(' ')\n\n  const chats = [\n    {\n      isUser: false,\n      text: \"Do something\"\n    },\n    {\n      isUser: true,\n      text: \"Do something else\"\n    },\n    {\n      isUser: true,\n      text: \"Try again\"\n    },\n    {\n      isUser: false,\n      text: \"Got response from server\"\n    },\n    {\n      isUser: true,\n      text: \"13 images found\"\n    },\n    {\n      isUser: false,\n      text: \"Find colorful images\"\n    }\n  ]\n\n  const chatCards = chats && chats.map(chat => {\n    return <ChatCard chat={chat} />\n  })\n  return (\n    <div className={classes1}>\n      <div className={classes2}>\n        {chatCards}\n      </div>\n    </div>\n  );\n};\n\nChatView.propTypes = {\n  chatView: PropTypes.bool\n};\n\nconst mapStateToProps = createPropsSelector({\n  chatView: getChatViewStatus\n})\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ChatView)","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux'\nimport {createPropsSelector} from 'reselect-immutable-helpers'\n\nimport * as actions from './actions'\nimport {getBackgroundImage} from './selectors'\n\nimport PrincipalContent from '../../components/PrincipalContent/PrincipalContent';\nimport ChatView from '../../components/ChatView/ChatView';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props)\n        this.pageType = 'home'\n    }\n\n    componentDidMount() {\n        const {initializeHome} = this.props\n        initializeHome()\n    }\n\n    render() {\n        return (\n            <div className=\"Home\">\n                <div className=\"c-background\"></div>\n                <ChatView />\n                <PrincipalContent />\n            </div>\n        )\n    }\n}\n\nHome.propTypes = {\n    backgroundImage: PropTypes.string,\n    initializeHome: PropTypes.func\n}\n\nconst mapStateToProps = createPropsSelector({\n    backgroundImage: getBackgroundImage\n})\n\nconst mapDispatchToProps = {\n    initializeHome: actions.initializeHome\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Home)\n","import Home from './Home.jsx';\n\nexport default Home;"],"sourceRoot":""}